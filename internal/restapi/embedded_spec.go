// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Swagger Ing Routes",
    "version": "0.0.1"
  },
  "paths": {
    "/routes": {
      "get": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes",
        "parameters": [
          {
            "maxItems": 2,
            "minItems": 2,
            "type": "array",
            "items": {
              "pattern": "^[-+]?[0-9]+\\.[0-9]+$",
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "src",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 2,
              "minItems": 2,
              "type": "array",
              "items": {
                "pattern": "^[-+]?[0-9]+\\.[0-9]+$",
                "type": "string"
              },
              "collectionFormat": "csv"
            },
            "collectionFormat": "multi",
            "name": "dst",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Routes"
            }
          },
          "500": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ApiInvalidResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiInvalidResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Route": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "distance": {
          "type": "number",
          "format": "float"
        },
        "duration": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "Routes": {
      "type": "object",
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/Route"
              }
            ]
          }
        },
        "source": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Swagger Ing Routes",
    "version": "0.0.1"
  },
  "paths": {
    "/routes": {
      "get": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes",
        "parameters": [
          {
            "maxItems": 2,
            "minItems": 2,
            "type": "array",
            "items": {
              "pattern": "^[-+]?[0-9]+\\.[0-9]+$",
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "src",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "maxItems": 2,
              "minItems": 2,
              "type": "array",
              "items": {
                "pattern": "^[-+]?[0-9]+\\.[0-9]+$",
                "type": "string"
              },
              "collectionFormat": "csv"
            },
            "collectionFormat": "multi",
            "name": "dst",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Routes"
            }
          },
          "500": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ApiInvalidResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiInvalidResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Route": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "distance": {
          "type": "number",
          "format": "float"
        },
        "duration": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "Routes": {
      "type": "object",
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutesRoutesItems0"
          }
        },
        "source": {
          "type": "string"
        }
      }
    },
    "RoutesRoutesItems0": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Route"
        }
      ]
    }
  }
}`))
}
